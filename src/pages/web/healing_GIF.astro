---
// images/healing_GIF内のGIFファイル名リスト
const gifNames = [
  "aft-1", "aft-2", "aft-3", "aft-4", "aft-5", "aft-7", "aft-8", "aft-9", "aft-10", "aft-11",
  "heal-１", "heal-２", "heal-3", "heal-4", "heal-5", "heal-６", "heal-７", "heal-８", "heal-９", "heal-10", "heal-11", "heal-12", "heal-13", "heal-14",
  "kon-1", "kon-3", "kon-5", "kon-6", "kon-7", "kon-8", "kon-9", "kon-10",
  "mid-1", "mid-2", "mid-3", "mid-4", "mid-5", "mid-6",
  "mor-1", "mor-2", "mor-3", "mor-4", "mor-5", "mor-6", "mor-7", "mor-8", "mor-9", "mor-10", "mor-11", "mor-12", "mor-13", "mor-14", "mor-15", "mor-16",
  "oya-1", "oya-2", "oya-3", "oya-4", "oya-5", "oya-6", "oya-7", "oya-8", "oya-9", "oya-10", "oya-11", "oyasu-1"
];
import Header from "../../components/header.astro";
import "../../styles/style.css";
---
<html lang="ja">
<head>
  <meta charset="UTF-8" />
  <title>ヒーリングGIFギャラリー｜プレス沖縄</title>
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <style>
    .gif-grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));
      gap: 1.2rem;
      margin-bottom: 2rem;
    }
    .gif-item {
      background: #fff;
      border-radius: 12px;
      box-shadow: 0 2px 8px rgba(0,0,0,.08);
      overflow: hidden;
      cursor: pointer;
      transition: transform .2s, box-shadow .2s;
      border: 1px solid #eee;
    }
    .gif-item:hover {
      transform: scale(1.04);
      box-shadow: 0 6px 18px rgba(0,0,0,.12);
    }
    .gif-img {
      width: 100%;
      height: 160px;
      object-fit: cover;
      display: block;
      background: #f8f8f8;
    }
    .gif-label {
      padding: 0.7rem;
      font-size: 1rem;
      text-align: center;
      color: #333;
      font-weight: 500;
    }
    /* モーダル */
    .modal {
      display: none;
      position: fixed;
      z-index: 2000;
      left: 0; top: 0;
      width: 100vw; height: 100vh;
      background: rgba(0,0,0,0.7);
      justify-content: center;
      align-items: center;
    }
    .modal.active {
      display: flex;
    }
    .modal-content {
      background: #fff;
      border-radius: 16px;
      padding: 1.5rem;
      max-width: 90vw;
      max-height: 80vh;
      box-shadow: 0 8px 32px rgba(0,0,0,.18);
      display: flex;
      flex-direction: column;
      align-items: center;
    }
    .modal-img {
      max-width: 80vw;
      max-height: 60vh;
      border-radius: 8px;
      margin-bottom: 1rem;
    }
    .modal-label {
      font-size: 1.2rem;
      color: #222;
      font-weight: 600;
      text-align: center;
    }
    .modal-close {
      margin-top: 1.2rem;
      padding: 0.5rem 1.2rem;
      background: #e74c3c;
      color: #fff;
      border: none;
      border-radius: 6px;
      font-size: 1rem;
      cursor: pointer;
      transition: background .2s;
    }
    .modal-close:hover {
      background: #c0392b;
    }
  </style>
</head>
<Header />
<body>
  <main class="container">
    <h1>ヒーリングGIFギャラリー</h1>
    <p style="text-align:center; margin-bottom:1.5rem;">画像をクリックすると拡大表示されます。</p>
    <div class="gif-grid">
      {gifNames.map(name => (
        <div class="gif-item" data-name={name}>
          <img src={`/images/healing_GIF/${name}.gif`} alt={name} class="gif-img" loading="lazy" />
          <div class="gif-label">{name}</div>
        </div>
      ))}
    </div>
    <!-- モーダル -->
    <div id="modal" class="modal">
      <div class="modal-content">
        <img id="modal-img" class="modal-img" src="" alt="" />
        <div id="modal-label" class="modal-label"></div>
        <button id="modal-close" class="modal-close">閉じる</button>
      </div>
    </div>
  </main>
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const items = document.querySelectorAll('.gif-item');
      const modal = document.getElementById('modal');
      const modalImg = document.getElementById('modal-img');
      const modalLabel = document.getElementById('modal-label');
      const modalClose = document.getElementById('modal-close');

      items.forEach(item => {
        item.addEventListener('click', () => {
          const el = item;
          const name = el instanceof HTMLElement ? el.dataset.name : undefined;
          if (!modal || !modalImg || !modalLabel || !name) return;
          (modalImg instanceof HTMLImageElement) && (modalImg.src = `/images/healing_GIF/${name}.gif`);
          modalLabel.textContent = name;
          modal.classList.add('active');
        });
      });

      if (modalClose) {
        modalClose.addEventListener('click', () => {
          if (!modal || !modalImg) return;
          modal.classList.remove('active');
          (modalImg instanceof HTMLImageElement) && (modalImg.src = '');
        });
      }

      if (modal) {
        modal.addEventListener('click', (e) => {
          if (e.target === modal) {
            if (!modalImg) return;
            modal.classList.remove('active');
            (modalImg instanceof HTMLImageElement) && (modalImg.src = '');
          }
        });
      }
    });
  </script>
</body>
</html>
